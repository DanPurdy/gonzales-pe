'use strict';

/**
 * List of all possible node types for all syntaxes.
 * @enum {string}
 */
let NodeType = {
  // Primitive nodes, can't be divided into smaller parts.
  AMPERSAND: 'ampersand',
  APOSTROPHE: 'apostrophe',
  ASTERISK: 'asterisk',
  CHARACTER: 'character',
  CIRCUMFLEX_ACCENT: 'circumflexAccent',
  COLON: 'colon',
  COMMA: 'comma',
  COMMERCIAL_AT: 'commercialAt',
  DIGIT: 'digit',
  EQUALS_SIGN: 'equalsSign',
  EXCLAMATION_MARK: 'exclamationMark',
  FULL_STOP: 'fullStop',
  GREATER_THAN_SIGN: 'greaterThanSign',
  HYPHEN_MINUS: 'hyphenMinus',
  LEFT_CURLY_BRACKET: 'leftCurlyBracket',
  LEFT_PARENTHESIS: 'leftParenthesis',
  LEFT_SQUARE_BRACKET: 'leftSquareBracket',
  LESS_THAN_SIGN: 'lessThanSign',
  LOW_LINE: 'lowLine',
  MULTILINE_COMMENT: 'multilineComment',
  NEWLINE: 'newline',
  NUMBER: 'number',
  NUMBER_SIGN: 'numberSign',
  PERCENT_SIGN: 'percentSign',
  PLUS_SIGN: 'plusSign',
  QUESTION_MARK: 'questionMark',
  QUOTATION_MARK: 'quotationMark',
  REVERSE_SOLIDUS: 'reverseSolidus',
  RIGHT_CURLY_BRACKET: 'rightCurlyBracket',
  RIGHT_PARENTHESIS: 'rightParenthesis',
  RIGHT_SQUARE_BRACKET: 'rightSquareBracket',
  SEMICOLON: 'semicolon',
  SINGLELINE_COMMENT: 'singlelineComment',
  SOLIDUS: 'solidus',
  SPACE: 'space',
  TILDE: 'tilde',
  VERTICAL_LINE: 'verticalLine',

  // Paired nodes, grouped by some trait.
  BRACES: 'braces',
  BRACKETS: 'brackets',
  PARENTHESES: 'parentheses',
  STRING: 'string',

  // Compound nodes.
  ARGUMENTS: 'arguments',
  ATKEYWORD: 'atkeyword',
  ATRULE: 'atrule',
  ATTRIBUTE_SELECTOR: 'attributeSelector',
  ATTRIBUTE_NAME: 'attributeName',
  ATTRIBUTE_FLAGS: 'attributeFlags',
  ATTRIBUTE_MATCH: 'attributeMatch',
  ATTRIBUTE_VALUE: 'attributeValue',
  BLOCK: 'block',
  CLASS: 'class',
  COLOR: 'color',
  COMBINATOR: 'combinator',
  CONDITION: 'condition',
  CONDITIONAL_STATEMENT: 'conditionalStatement',
  DECLARATION: 'declaration',
  DECLARATION_DELIMITER: 'declarationDelimiter',
  DEFAULT: 'default',
  DELIMITER: 'delimiter',
  DIMENSION: 'dimension',
  ESCAPED_STRING: 'escapedString',
  EXTEND: 'extend',
  EXPRESSION: 'expression',
  FUNCTION: 'function',
  GLOBAL: 'global',
  ID: 'id',
  IDENT: 'ident',
  IMPORTANT: 'important',
  INCLUDE: 'include',
  INTERPOLATION: 'interpolation',
  INTERPOLATED_VARIABLE: 'interpolatedVariable',
  KEYFRAMES_SELECTOR: 'keyframesSelector',
  LOOP: 'loop',
  MIXIN: 'mixin',
  NAME_PREFIX: 'namePrefix',
  NAMESPACE_PREFIX: 'namespacePrefix',
  NAMESPACE_SEPARATOR: 'namespaceSeparator',
  OPERATOR: 'operator',
  OPTIONAL: 'optional',
  PARENT_SELECTOR: 'parentSelector',
  PARENT_SELECTOR_EXTENSION: 'parentSelectorExtension',
  PERCENTAGE: 'percentage',
  PLACEHOLDER: 'placeholder',
  PROGID: 'progid',
  PROPERTY: 'property',
  PROPERTY_DELIMITER: 'propertyDelimiter',
  PSEUDO_CLASS: 'pseudoClass',
  PSEUDO_ELEMENT: 'pseudoElement',
  RAW: 'raw',
  RULESET: 'ruleset',
  SELECTOR: 'selector',
  STYLESHEET: 'stylesheet',
  TYPE_SELECTOR: 'typeSelector',
  URI: 'uri',
  VALUE: 'value',
  VARIABLE: 'variable',
  VARIABLES_LIST: 'variablesList'
};

module.exports = NodeType;
